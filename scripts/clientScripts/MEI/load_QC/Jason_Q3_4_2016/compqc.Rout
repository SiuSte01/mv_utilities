
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> #do QC on newly received MEI data 
> #Sudheer prepares wh_stage.mei_claim_counts
> #allows code level comparison of last 2 Q to prior 2 Q
> ######################################## change last2sum and prior2sum to indicate recent quarters.  
> 
> 
> #set up the database connection
> library(ROracle)
Loading required package: DBI
> drv <- dbDriver("Oracle")
> con <- dbConnect(drv, username = "claims_usr", password = "claims_usr123", dbname = "pldwh2dbr")
> 
> #set up your query
> myq1<-"select * from wh_stage.mei_claim_counts_NEW"
> 
> #executing the query
> rs <- dbSendQuery(con, myq1)
> data <- fetch(rs)
> 
> dbDisconnect(con)
[1] TRUE
> 
> ################################################################# change 1 of 1 
> 
> last2sum<-data$Q32016+data$Q42016
> prior2sum<-data$Q12016+data$Q22016
> 
> idx<-which(is.na(last2sum))
> if(length(idx) > 0) {
+  last2sum[idx]<-0.1
+ }
> idx<-which(is.na(prior2sum))
> if(length(idx) > 0) {
+  prior2sum[idx]<-0.1
+ }
> 
> pdf("MEI_compqc.pdf")
> plot(prior2sum,last2sum,log="xy",pch=4,cex=.5,xlab="prior2Q",
+ ylab="new2Q")
Warning messages:
1: In xy.coords(x, y, xlabel, ylabel, log) :
  190 x values <= 0 omitted from logarithmic plot
2: In xy.coords(x, y, xlabel, ylabel, log) :
  222 y values <= 0 omitted from logarithmic plot
> lines(c(.1,1e7),c(.1,1e7),lwd=3,col="red")
> dev.off()
null device 
          1 
> 
> 
> #output all data to a file called data.txt
> write.table(data,file="MEI_codes.txt",col.names=T,row.names=F,quote=F,
+ sep="\t",na="")
> 
> 
> diff<-log10((prior2sum)/(last2sum))
> diff2<-abs((prior2sum)-(last2sum))
> i1<-which(diff2<= 10)
> i2<-which((diff < log10(1.1)) & (diff > log10(1/1.1)))
> i<-union(i1,i2)
> print(length(i1))
[1] 744
> print(length(i2))
[1] 606
> print(length(i))
[1] 1158
> pct.good<-100*(length(i)/length(diff2))
> cat("percent good = ",pct.good,"\n")
percent good =  70.95588 
> 
> #output only problematic records to a file called baddata.txt
> b<-which((diff >= log10(1.25)) & (diff >= log10(1/1.25)))
> 
> bad.records<-data[b,]
> 
> write.table(bad.records,file="baddata.txt",col.names=T,row.names=F,quote=F,
+ sep="\t",na="")
> 
> proc.time()
   user  system elapsed 
  0.723   0.055   0.818 
